# Generated by Django 4.1.4 on 2023-06-13 22:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_name', models.CharField(max_length=100, null=True, verbose_name='First Name')),
                ('l_name', models.CharField(max_length=100, null=True, verbose_name='Last Name')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/photo/', verbose_name='Profile Pic')),
                ('about', models.TextField(blank=True, null=True, verbose_name='About')),
                ('school', models.CharField(blank=True, max_length=200, null=True, verbose_name='Institution')),
                ('course', models.CharField(blank=True, max_length=200, null=True, verbose_name='Course Studying')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Quiz Title')),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quiz Duration (mins)')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name')),
                ('score', models.FloatField(verbose_name='Total Score')),
                ('remark', models.CharField(blank=True, choices=[('Gold', 'Gold'), ('Silver', 'Silver'), ('Bronze', 'Bronze'), ('Copper', 'Copper')], max_length=100, null=True, verbose_name='Remark')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='quiz.quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='quiz.profile')),
            ],
            options={
                'ordering': ['-score'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='Question Order')),
                ('question', models.TextField(blank=True, null=True, verbose_name='Question')),
                ('optionA', models.CharField(blank=True, max_length=200, null=True, verbose_name='Option A')),
                ('optionB', models.CharField(blank=True, max_length=200, null=True, verbose_name='Option B')),
                ('optionC', models.CharField(blank=True, max_length=200, null=True, verbose_name='Option C')),
                ('optionD', models.CharField(blank=True, max_length=200, null=True, verbose_name='Option D')),
                ('answer', models.CharField(choices=[('optionA', 'optionA'), ('optionB', 'optionB'), ('optionC', 'optionC'), ('optionD', 'optionD')], max_length=200)),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quiz.quiz', verbose_name='Quiz')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='quiz',
            field=models.ManyToManyField(blank=True, related_name='creator', to='quiz.quiz'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True, verbose_name='Group Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Group Description')),
                ('type', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], default='Public', max_length=100, verbose_name='Group Type')),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='groups/image/', verbose_name='Group image')),
                ('admins', models.ManyToManyField(blank=True, related_name='group_admin', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, related_name='group_member', to=settings.AUTH_USER_MODEL)),
                ('quizzes', models.ManyToManyField(blank=True, related_name='group', to='quiz.quiz')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='message')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('seen', models.BooleanField(default=False, null=True)),
                ('receiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_received', to=settings.AUTH_USER_MODEL, verbose_name='receiver')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_sent', to=settings.AUTH_USER_MODEL, verbose_name='sender')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
    ]
